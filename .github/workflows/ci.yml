name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create_cache:
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            yarn.lock
            .yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

  yarn_test:
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye
    needs: create_cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            yarn.lock
            .yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

  gitleaks:
    runs-on: ubuntu-latest
    container:
      image: zricethezav/gitleaks
    needs: yarn_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run gitleaks
        run: gitleaks detect --verbose --source . -f json -r gitleaks.json
        continue-on-error: true

      - name: Upload gitleaks report
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-report
          path: gitleaks.json

  njsscan:
    runs-on: ubuntu-latest
    container:
      image: python:3
    needs: yarn_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install njsscan
        run: pip install --upgrade njsscan

      - name: Run njsscan
        run: njsscan --exit-warning . --sarif -o njsscan.sarif
        continue-on-error: true

      - name: Upload njsscan report
        uses: actions/upload-artifact@v3
        with:
          name: njsscan-report
          path: njsscan.sarif

  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    needs: yarn_test
    env:
      SEMGREP_RULES: p/javascript
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run semgrep
        run: semgrep ci --json --output semgrep.json
        continue-on-error: true

      - name: Upload semgrep report
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-report
          path: semgrep.json

  upload_reports:
    runs-on: ubuntu-latest
    needs: ["gitleaks", "njsscan", "semgrep"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install requests
        run: pip3 install requests

      - name: Upload gitleaks report
        run: python3 upload-reports.py gitleaks.json

      - name: Upload njsscan report
        run: python3 upload-reports.py njsscan.sarif
        
      - name: Upload semgrep report
        run: python3 upload-reports.py semgrep.json

  build_image:
    runs-on: ubuntu-latest
    container:
      image: docker:24
    needs: yarn_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
        env:
          IMAGE_NAME: blauwiggle/demo-app
          IMAGE_TAG: juice-shop-1.1
