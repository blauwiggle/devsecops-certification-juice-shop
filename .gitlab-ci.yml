variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  ACCOUNT_ID: $ACCOUNT_ID 
  IMAGE_NAME: $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/juice-shop

stages:
  - test
  - build
  - cache 

create_cache:
  image: node:18-bullseye
  stage: cache
  script:
    - yarn install
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
      - yarn.lock
      - .yarn
    policy: pull-push

yarn_test:
  image: node:18-bullseye
  stage: test
  script:
    - yarn install
    - yarn test
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
      - yarn.lock
      - .yarn
    policy: pull-push

gitleaks:
  stage: test
  image:
    name: zricethezav/gitleaks
    entrypoint:  [""]
  script:
    - gitleaks detect --verbose --source . -f json -r gitleaks.json
  allow_failure: true
  artifacts:
    when: always
    paths:
      - gitleaks.json
  
njsscan:
  stage: test
  image: python
  before_script:
    - pip3 install --upgrade njsscan
  script:
    - njsscan --exit-warning . --sarif -o njsscan.sarif 
  allow_failure: true
  artifacts:
    when: always
    paths: 
      - njsscan.sarif 

semgrep:
  stage: test
  image: returntocorp/semgrep
  variables:
    SEMGREP_RULES: p/javascript
  script:
    - semgrep ci --json --output semgrep.json
  allow_failure: true
  artifacts:
    when: always
    paths: 
      - semgrep.json

retire:
  stage: test
  image: node:18-bullseye
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
      - yarn.lock
      - .yarn
    policy: pull-push
  before_script:
    - npm install -g retire
  script:
    - retire --path . --outputformat json --outputpath retire.json
  allow_failure: true
  

# upload_reports:
#   stage: test
#   image: python
#   needs: ["gitleaks", "njsscan", "semgrep", retire]
#   when: always
#   before_script:
#     - pip3 install requests
#   script:
#     - python3 upload-reports.py gitleaks.json
#     - python3 upload-reports.py njsscan.sarif
#     - python3 upload-reports.py semgrep.json
#     - - python3 upload-reports.py retire.json

  
build_image:
    stage: build
    image: docker:24
    services:
      - docker:24-dind


    before_script:
      - apk --no-cache add curl python3 py3-pip
      - pip3 install --no-cache-dir awscli
      - echo aws ecr get-login-password | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    script:
      - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA -t $IMAGE_NAME:latest .
      - docker push $IMAGE_NAME:$CI_COMMIT_SHA
      - docker push $IMAGE_NAME:latest


   







